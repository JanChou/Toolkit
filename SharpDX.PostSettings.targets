<!-- Common Targets used by SharpDX projects -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DocumentationFile>bin\Release\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Win8Release|AnyCPU'">
    <DocumentationFile>bin\Win8Release\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>

    <PropertyGroup>
      <ResolveReferencesDependsOn>
        $(ResolveReferencesDependsOn);
        ImplicitlyExpandTargetFramework;
      </ResolveReferencesDependsOn>

      <ImplicitlyExpandTargetFrameworkDependsOn>
        $(ImplicitlyExpandTargetFrameworkDependsOn);
        GetReferenceAssemblyPaths
      </ImplicitlyExpandTargetFrameworkDependsOn>
    </PropertyGroup>

    <Target Name="ImplicitlyExpandTargetFramework"
        Condition="'$(ImplicitlyExpandTargetFramework)' == 'true'"
        DependsOnTargets="$(ImplicitlyExpandTargetFrameworkDependsOn)"
    >
    <ItemGroup>
      <ReferenceAssemblyPaths Include="$(_TargetFrameworkDirectories)"/>
      <ReferencePath Include="%(ReferenceAssemblyPaths.Identity)*.dll">
        <WinMDFile>false</WinMDFile>
        <CopyLocal>false</CopyLocal>
        <ReferenceGroupingDisplayName>$(TargetFrameworkMonikerDisplayName)</ReferenceGroupingDisplayName>
        <ReferenceGrouping>$(TargetFrameworkMoniker)</ReferenceGrouping>
        <ResolvedFrom>ImplicitlyExpandTargetFramework</ResolvedFrom>
        <IsSystemReference>True</IsSystemReference>
      </ReferencePath>
    </ItemGroup>

    <Message Importance="Low" Text="Including @(ReferencePath)"
      Condition="'%(ReferencePath.ResolvedFrom)' == 'ImplicitlyExpandTargetFramework'"/>

    <ItemGroup>
      <_ResolveAssemblyReferenceResolvedFiles Include="@(ReferencePath)"
        Condition="'%(ReferencePath.ResolvedFrom)' == 'ImplicitlyExpandTargetFramework'"/>
    </ItemGroup>
  </Target>

  <!-- Don't use anymore task, as msbuild is keeping a lock on the file on the 1st build and we are not able to reapply SharpCLI once it is created
   <UsingTask AssemblyFile="$(SolutionDir)Source\Bin\SharpCli.exe" TaskName="SharpCli.InteropBuilderTask" /> -->

  <Target Name="AfterBuild">
    <Exec Command='"$(SolutionDir)\Source\Bin\SharpCLI.exe" "$(TargetPath)"'/>
    <!-- <InteropBuilderTask FileName="$(TargetPath)"/> -->

    <Message Text="Signing Assembly $(TargetPath)"/>

    <!-- Copy back *.dll from bin/Debug|Release to obj/Debug/Release directory -->
    <Copy SourceFiles="@(MainAssembly)" DestinationFolder="$(IntermediateOutputPath)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"/>
    <!-- Copy back *.pdb from bin/Debug|Release to obj/Debug/Release directory -->
    <Copy SourceFiles="@(_DebugSymbolsOutputPath)" DestinationFiles="@(_DebugSymbolsIntermediatePath)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)" Condition="'$(_DebugSymbolsProduced)'=='true' and '$(SkipCopyingSymbolsToOutputDirectory)' != 'true'"/>

    <Exec Command='"C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Bin\sn.exe" -Ra $(TargetPath) $(SolutionDir)sharpdx.snk' Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' And '$(SharpDXSign)' == 'true'"/>
  </Target>
</Project>